package diagramme;

import java.util.HashMap;
import java.util.Map;

import exercice2.etape1.*;

public aspect Diagramme {
	//Pour garder les objets en m√©moire et savoir qui appelle qui
	//un Integer pour connaitre la distance entre les != objets
	private Map<Object, Integer> actors = new HashMap<Object, Integer>();
	private int rank = 0;
	
	pointcut newClients():
		call(public Clients.new(..));
	
	/*
	pointcut addClient():
		call(public void Clients.addClient(..));
	
	pointcut newOrders():
		call(public Orders.new(..));
	
	pointcut addOrder():
		call(public void Orders.addOrder(..));
	
	pointcut newClient():
		call(public Client.new(..));
	
	pointcut newOrder():
		call(public Order.new(..));
		
	*/
	
	
	after(): newClients() {
		int thisRank = actors.get(thisJoinPoint.getThis());
		switch(thisRank)
		{
		case 0:
			System.out.println("  |----new---->|             |             |             | ");
			break;
		default:
			;
		}
		
		if(!actors.containsKey(thisJoinPoint.getThis())) {
			rank++;
			actors.put(thisJoinPoint.getThis(), rank);
		}
	}
	
	/*
	after(): addClient() {
		System.out.println("  |-addClient->|             |             |             | ");
	}
	
	after(): newOrders() {
		System.out.println("  |------------|-----new---->|             |             | ");
	}
	
	after(): addOrder() {
		System.out.println("  |------------|--addOrder-->|             |             | ");
	}
	
	after(): newClient() {
		System.out.println("  |------------|-------------|-----new---->|             | ");
	}
	
	after(): newOrder() {
		System.out.println("  |------------|-------------|-------------|-----new---->| ");
	}
	
	*/
}
